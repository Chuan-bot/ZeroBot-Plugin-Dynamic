name: ç¨³å®šç‰ˆ
on:
  push:
    tags:
      - v*

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  my-job:
    name: Build zbpd on Push Tag ðŸš€
    runs-on: ubuntu-18.04
    steps:

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache Go
        id: cache
        uses: actions/cache@v2
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}

      - name: Tidy Go modules
        run: go mod tidy

      - name: Install cross C compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential module-assistant gcc-9-multilib-i686-linux-gnu g++-9-multilib-i686-linux-gnu gcc-9-arm-linux-gnueabihf g++-9-arm-linux-gnueabihf gcc-9-aarch64-linux-gnu g++-9-aarch64-linux-gnu
          wget -nv https://downloads.openwrt.org/releases/19.07.8/targets/brcm2708/bcm2708/openwrt-sdk-19.07.8-brcm2708-bcm2708_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
          tar -xJf openwrt-sdk-19.07.8-brcm2708-bcm2708_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
          mv openwrt-sdk-19.07.8-brcm2708-bcm2708_gcc-7.5.0_musl_eabi.Linux-x86_64 op19078-brcm2708
          rm openwrt-sdk-19.07.8-brcm2708-bcm2708_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz

      - name: Build for raspi1 openwrt (arm1176jzf-s+vfp)
        run: |
          PATH=$PATH:`pwd`/op19078-brcm2708/staging_dir/toolchain-arm_arm1176jzf-s+vfp_gcc-7.5.0_musl_eabi/bin/
          export PATH
          export STAGING_DIR=`pwd`/op19078-brcm2708/staging_dir/toolchain-arm_arm1176jzf-s+vfp_gcc-7.5.0_musl_eabi/
          CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=6 CC=arm-openwrt-linux-gcc CXX=arm-openwrt-linux-g++ AR=arm-openwrt-linux-ar go build -ldflags="-s -w" -o artifacts/zbpd-openwrt-linux-arm1176jzf-s+vfp
      - name: Build linux-x64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o artifacts/zbpd-linux-x64
      - name: Build linux-x86
        run: CGO_ENABLED=1 GOOS=linux GOARCH=386 CC=i686-linux-gnu-gcc-9 CXX=i686-linux-gnu-g++-9 AR=i686-linux-gnu-ar go build -ldflags="-s -w" -o artifacts/zbpd-linux-x86
      - name: Build arm64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=arm64 GOARM=7 CC=aarch64-linux-gnu-gcc-9 CXX=aarch64-linux-gnu-g++-9 AR=aarch64-linux-gnu-ar go build -ldflags="-s -w" -o artifacts/zbpd-linux-arm64
      - name: Build armhfv6
        run: CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=6 CC=arm-linux-gnueabihf-gcc-9 CXX=arm-linux-gnueabihf-g++-9 AR=arm-linux-gnueabihf-ar go build -ldflags="-s -w" -o artifacts/zbpd-linux-armhfv6

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/zbpd-*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true